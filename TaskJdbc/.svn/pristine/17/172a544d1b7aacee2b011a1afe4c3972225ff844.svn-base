<project name="TaskJdbc" basedir=".">

	<property name="projectName" value="TaskJdbc" />
	<property name="libs.dir" value="lib" />
	<property name="src.dir" value="src" />
	<property name="test.dir" value="test" />
	<property name="build.dir" value="build" />
	<property name="dist.dir" location="dist" />
	<property name="resources.dir" location="resources" />
	<property name="testResources.dir" location="testResources" />
	<property name="classes.dir" value="${build.dir}/classes" />
	<property name="testclasses.dir" value="${build.dir}/testclasses" />
	<property name="report.dir" value="reports" />
	<property name="junit.report.dir" value="${report.dir}/junit" />



	<path id="src.compile.classpath">
		<pathelement location="${libs.dir}/slf4j-api-1.7.21.jar" />
		<pathelement location="${libs.dir}/junit-4.12.jar" />
		<pathelement location="${libs.dir}/hamcrest-core-1.3.jar" />
		<pathelement location="${libs.dir}/commons-dbcp2-2.1.1.jar" />
		<pathelement location="${libs.dir}/commons-pool2-2.4.2.jar" />
		<pathelement location="${libs.dir}/h2-1.4.191.jar" />

	</path>

	<path id="test.compile.classpath">
		<pathelement location="${classes.dir}" />
		<pathelement location="${libs.dir}/junit-4.12.jar" />
		<pathelement location="${libs.dir}/hamcrest-core-1.3.jar" />
		<pathelement location="${libs.dir}/dbunit-2.4.9.jar" />
		<pathelement location="${libs.dir}/h2-1.4.191.jar" />
	</path>



	<path id="junit.runtime.classpath">
		<pathelement location="${testclasses.dir}" />
		<pathelement location="${libs.dir}/junit-4.12.jar" />
		<pathelement location="${libs.dir}/hamcrest-core-1.3.jar" />
		<pathelement location="${libs.dir}/slf4j-api-1.7.21.jar" />
		<pathelement location="${libs.dir}/dbunit-2.4.9.jar" />
		<pathelement location="${libs.dir}/h2-1.4.191.jar" />
		<pathelement location="${libs.dir}/commons-dbcp2-2.1.1.jar" />
		<pathelement location="${libs.dir}/commons-pool2-2.4.2.jar" />
		<pathelement location="${libs.dir}/commons-logging-1.2.jar" />
		<pathelement location="${libs.dir}/slf4j-simple-1.7.21.jar" />
	</path>



	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${report.dir}" />
		<delete dir="${dist.dir}" />
	</target>

	<target name="init" depends="clean">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${classes.dir}" />
		<mkdir dir="${testclasses.dir}" />
		<mkdir dir="${report.dir}" />
		<mkdir dir="${junit.report.dir}" />

	</target>

	<target name="compile" depends="init">
		<javac classpathref="src.compile.classpath"
		       srcdir="${src.dir}"
		       destdir="${classes.dir}"
		       debug="on"
		       source="1.8"
		       fork="true"
		       includeantruntime="no" />
		<copy todir="${classes.dir}/resources">
			<fileset dir="${resources.dir}" includes="**/*" />
		</copy>
	</target>


	<target name="testcompile" depends="compile">
		<javac classpathref="test.compile.classpath"
		       srcdir="${test.dir}"
		       destdir="${testclasses.dir}"
		       debug="on"
		       source="1.8"
		       fork="true"
		       includeantruntime="no" />
		<copy todir="${testclasses.dir}/testResources">
			<fileset dir="${testResources.dir}" includes="**/*" />
		</copy>
	</target>


	<target name="test" depends="testcompile">

		<junit printsummary="on" haltonfailure="no" fork="true">

			<classpath refid="test.compile.classpath" />
			<classpath refid="junit.runtime.classpath" />


			<formatter type="plain" usefile="false" />
			<formatter type="xml" />
			<batchtest todir="${junit.report.dir}">
				<fileset dir="${test.dir}" includes="**/*Test.java">
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="testreport" depends="test">
		<mkdir dir="${junit.report.dir}/tests" />
		<junitreport todir="${junit.report.dir}/tests">
			<fileset dir="${junit.report.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report todir="${junit.report.dir}/tests" />
		</junitreport>
		<delete>
			<fileset dir="${junit.report.dir}" includes="TEST-*.xml" />
		</delete>
	</target>



	<target name="jar" depends="compile">
		<mkdir dir="${dist.dir}" />
		<jar jarfile="${dist.dir}/${projectName}.jar" basedir="${classes.dir}">
		</jar>
	</target>

	<target name="all" depends="testreport, jar">
	</target>



</project>